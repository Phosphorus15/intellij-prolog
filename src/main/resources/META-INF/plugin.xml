<idea-plugin>
    <id>tech.phosphorus.intellij-prolog</id>
    <name>Prolog</name>
    <vendor email="phosphophate@gmail.com" url="https://github.com/Phosphorus15">Phosphorus15</vendor>

    <description><![CDATA[
    Supports for Prolog language, currently works under SWI-Prolog.<br>
    <a href="https://github.com/Phosphorus15/intellij-prolog">Github repository</a><br>
    Contributions & suggestions are highly appreciated!<br>

    <h1>Copyrights</h1>
    <ul>
        <li>Thanks to ice1000's contribution and his awesome icons !</li>
        <li>This plugin icon is retrieved from public domain</li>
    </ul>
    ]]></description>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.platform</depends>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    <idea-version since-build="222.4345" until-build="223.*"/>

    <extensions defaultExtensionNs="com.intellij">

        <notificationGroup id="Prolog Plugin Notification"
                           displayType="BALLOON"
                           />

        <!-- Annotators -->
        <annotator language="IJProlog"
                   implementationClass="tech.phosphorus.intellij.prolog.annotator.SingletonVariableAnnotator"/>
        <externalAnnotator language="IJProlog"
                           implementationClass="tech.phosphorus.intellij.prolog.annotator.PrologExternalAnnotator"/>

        <!-- Completion contributor -->
        <completion.contributor language="IJProlog"
                                implementationClass="tech.phosphorus.intellij.prolog.completion.PrologCompletionContributor"/>

        <!-- Declaration handler -->
        <gotoDeclarationHandler
                implementation="tech.phosphorus.intellij.prolog.references.PrologGotoDeclarationHandler"/>
        <gotoSymbolContributor implementation="tech.phosphorus.intellij.prolog.references.PrologGotoPredicateContributor"/>

        <!-- Editor related -->
        <lang.braceMatcher language="IJProlog" implementationClass="tech.phosphorus.intellij.prolog.PrologBraceMatcher"/>
        <lang.commenter language="IJProlog" implementationClass="tech.phosphorus.intellij.prolog.MultiLineCommenter"/>
        <colorSettingsPage implementation="tech.phosphorus.intellij.prolog.PrologColorSettingsPage"/>
        <lang.syntaxHighlighterFactory language="IJProlog"
                                       implementationClass="tech.phosphorus.intellij.prolog.PrologSyntaxHighlighterFactory"/>


        <!-- Stub indices -->
        <stubIndex implementation="tech.phosphorus.intellij.prolog.toolchain.PrologPredicateStubIndex"/>

        <!-- Run configurations -->
        <runConfigurationProducer
                implementation="tech.phosphorus.intellij.prolog.project.PrologSimpleRunConfigurationProducer"/>
        <runLineMarkerContributor language="IJProlog"
                                  implementationClass="tech.phosphorus.intellij.prolog.project.PrologSimpleRunLineMarkerContributor"/>

        <!-- Basic definitions -->
        <fileType name="Prolog File" implementationClass="tech.phosphorus.intellij.prolog.psi.PrologFileType"
                  fieldName="INSTANCE" language="IJProlog" extensions="pl;pro"/>
        <stubElementTypeHolder class="tech.phosphorus.intellij.prolog.psi.PrologTypes"/>
        <configurationType implementation="tech.phosphorus.intellij.prolog.project.PrologRunConfigurationType"/>
        <lang.parserDefinition language="IJProlog"
                               implementationClass="tech.phosphorus.intellij.prolog.PrologParserDefinition"/>

        <!-- Persistent services -->
        <applicationService serviceImplementation="tech.phosphorus.intellij.prolog.settings.PrologStatePersistence"/>
        <!-- projectService (if needed) -->
        <applicationConfigurable groupId="language" displayName="Prolog"
                                 id="PrologLanguageConfigurable"
                                 instance="tech.phosphorus.intellij.prolog.settings.LanguageConfigurable"/>
        <errorHandler implementation="tech.phosphorus.intellij.prolog.AnonymousFeedback$GitHubErrorReport"/>
    </extensions>
    <actions>
        <!-- Add your actions here -->
        <action id="Prolog.ShowSettings"
                text="Goto Settings"
                class="tech.phosphorus.intellij.prolog.settings.PrologShowSettingsAction"/>
    </actions>
</idea-plugin>
